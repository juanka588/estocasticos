/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Data.Statistics;
import java.awt.event.ItemEvent;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JPanel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;
import org.jfree.ui.RefineryUtilities;

/**
 *
 * @author JuanCamilo
 */
public class StatsPanel extends JPanel {

    public static final String STRING_TIME = "Average Time";
    public static final String STRING_FINISH_CALLS = "Finish Calls";
    public static final String STRING_BUSY = "Busy Time";
    public static final String STRING_FREE = "Free Time";
    private List<Statistics> stats;

    public StatsPanel(List<Statistics> stats) {
        initComponents();
        this.stats = stats;
        String[] items = new String[]{STRING_TIME, STRING_FINISH_CALLS, STRING_BUSY, STRING_FREE};
        statsSelector.setModel(new DefaultComboBoxModel(items));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        statsSelector = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();

        statsSelector.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                statsSelectorItemStateChanged(evt);
            }
        });

        jLabel1.setText("Select an option to visualize:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(statsSelector, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(statsSelector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    public JPanel getContentPane() {
        return this;
    }
    private void statsSelectorItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_statsSelectorItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            String item = (String) evt.getItem();
            int selection = 0;
            switch (item) {
                case STRING_TIME:
                    selection = 0;
                    break;
                case STRING_FINISH_CALLS:
                    selection = 1;
                    break;
                case STRING_BUSY:
                    selection = 2;
                    break;
                case STRING_FREE:
                    selection = 3;
                    break;
            }
            LineChart_AWT chart = new LineChart_AWT(
                    item + " Vs Iterations",
                    item + " vs Iterations", createFreeChart(stats, selection, item));

            chart.pack();
            chart.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
            RefineryUtilities.centerFrameOnScreen(chart);
            chart.setVisible(true);
        }
    }//GEN-LAST:event_statsSelectorItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JComboBox statsSelector;
    // End of variables declaration//GEN-END:variables

    private ChartPanel createFreeChart(List<Statistics> stats, int column, String title) {
        XYSeries series = new XYSeries(title);
        int i = 0;
        for (Statistics stat : stats) {
            series.add(i, stat.getStat(column));
            i++;
        }
        XYSeriesCollection data = new XYSeriesCollection(series);
        JFreeChart chart = //ChartFactory.createLineChart("stats", title, "avg", ds);
                ChartFactory.createXYLineChart(title, "Iterations", title, data,
                        PlotOrientation.VERTICAL,
                        true, true, false);
        return new ChartPanel(chart);
    }
}
